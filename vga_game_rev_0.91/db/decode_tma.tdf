--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 17.0 cbx_cycloneii 2017:04:25:18:06:29:SJ cbx_lpm_add_sub 2017:04:25:18:06:29:SJ cbx_lpm_compare 2017:04:25:18:06:29:SJ cbx_lpm_decode 2017:04:25:18:06:29:SJ cbx_mgl 2017:04:25:18:09:28:SJ cbx_nadder 2017:04:25:18:06:30:SJ cbx_stratix 2017:04:25:18:06:30:SJ cbx_stratixii 2017:04:25:18:06:30:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Intel and sold by Intel or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_tma
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode5492w[1..0]	: WIRE;
	w_anode5501w[3..0]	: WIRE;
	w_anode5518w[3..0]	: WIRE;
	w_anode5528w[3..0]	: WIRE;
	w_anode5538w[3..0]	: WIRE;
	w_anode5548w[3..0]	: WIRE;
	w_anode5558w[3..0]	: WIRE;
	w_anode5568w[3..0]	: WIRE;
	w_anode5578w[3..0]	: WIRE;
	w_anode5590w[1..0]	: WIRE;
	w_anode5597w[3..0]	: WIRE;
	w_anode5608w[3..0]	: WIRE;
	w_anode5618w[3..0]	: WIRE;
	w_anode5628w[3..0]	: WIRE;
	w_anode5638w[3..0]	: WIRE;
	w_anode5648w[3..0]	: WIRE;
	w_anode5658w[3..0]	: WIRE;
	w_anode5668w[3..0]	: WIRE;
	w_data5490w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode5668w[3..3], w_anode5658w[3..3], w_anode5648w[3..3], w_anode5638w[3..3], w_anode5628w[3..3], w_anode5618w[3..3], w_anode5608w[3..3], w_anode5597w[3..3]), ( w_anode5578w[3..3], w_anode5568w[3..3], w_anode5558w[3..3], w_anode5548w[3..3], w_anode5538w[3..3], w_anode5528w[3..3], w_anode5518w[3..3], w_anode5501w[3..3]));
	w_anode5492w[] = ( (w_anode5492w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode5501w[] = ( (w_anode5501w[2..2] & (! w_data5490w[2..2])), (w_anode5501w[1..1] & (! w_data5490w[1..1])), (w_anode5501w[0..0] & (! w_data5490w[0..0])), w_anode5492w[1..1]);
	w_anode5518w[] = ( (w_anode5518w[2..2] & (! w_data5490w[2..2])), (w_anode5518w[1..1] & (! w_data5490w[1..1])), (w_anode5518w[0..0] & w_data5490w[0..0]), w_anode5492w[1..1]);
	w_anode5528w[] = ( (w_anode5528w[2..2] & (! w_data5490w[2..2])), (w_anode5528w[1..1] & w_data5490w[1..1]), (w_anode5528w[0..0] & (! w_data5490w[0..0])), w_anode5492w[1..1]);
	w_anode5538w[] = ( (w_anode5538w[2..2] & (! w_data5490w[2..2])), (w_anode5538w[1..1] & w_data5490w[1..1]), (w_anode5538w[0..0] & w_data5490w[0..0]), w_anode5492w[1..1]);
	w_anode5548w[] = ( (w_anode5548w[2..2] & w_data5490w[2..2]), (w_anode5548w[1..1] & (! w_data5490w[1..1])), (w_anode5548w[0..0] & (! w_data5490w[0..0])), w_anode5492w[1..1]);
	w_anode5558w[] = ( (w_anode5558w[2..2] & w_data5490w[2..2]), (w_anode5558w[1..1] & (! w_data5490w[1..1])), (w_anode5558w[0..0] & w_data5490w[0..0]), w_anode5492w[1..1]);
	w_anode5568w[] = ( (w_anode5568w[2..2] & w_data5490w[2..2]), (w_anode5568w[1..1] & w_data5490w[1..1]), (w_anode5568w[0..0] & (! w_data5490w[0..0])), w_anode5492w[1..1]);
	w_anode5578w[] = ( (w_anode5578w[2..2] & w_data5490w[2..2]), (w_anode5578w[1..1] & w_data5490w[1..1]), (w_anode5578w[0..0] & w_data5490w[0..0]), w_anode5492w[1..1]);
	w_anode5590w[] = ( (w_anode5590w[0..0] & data_wire[3..3]), enable_wire);
	w_anode5597w[] = ( (w_anode5597w[2..2] & (! w_data5490w[2..2])), (w_anode5597w[1..1] & (! w_data5490w[1..1])), (w_anode5597w[0..0] & (! w_data5490w[0..0])), w_anode5590w[1..1]);
	w_anode5608w[] = ( (w_anode5608w[2..2] & (! w_data5490w[2..2])), (w_anode5608w[1..1] & (! w_data5490w[1..1])), (w_anode5608w[0..0] & w_data5490w[0..0]), w_anode5590w[1..1]);
	w_anode5618w[] = ( (w_anode5618w[2..2] & (! w_data5490w[2..2])), (w_anode5618w[1..1] & w_data5490w[1..1]), (w_anode5618w[0..0] & (! w_data5490w[0..0])), w_anode5590w[1..1]);
	w_anode5628w[] = ( (w_anode5628w[2..2] & (! w_data5490w[2..2])), (w_anode5628w[1..1] & w_data5490w[1..1]), (w_anode5628w[0..0] & w_data5490w[0..0]), w_anode5590w[1..1]);
	w_anode5638w[] = ( (w_anode5638w[2..2] & w_data5490w[2..2]), (w_anode5638w[1..1] & (! w_data5490w[1..1])), (w_anode5638w[0..0] & (! w_data5490w[0..0])), w_anode5590w[1..1]);
	w_anode5648w[] = ( (w_anode5648w[2..2] & w_data5490w[2..2]), (w_anode5648w[1..1] & (! w_data5490w[1..1])), (w_anode5648w[0..0] & w_data5490w[0..0]), w_anode5590w[1..1]);
	w_anode5658w[] = ( (w_anode5658w[2..2] & w_data5490w[2..2]), (w_anode5658w[1..1] & w_data5490w[1..1]), (w_anode5658w[0..0] & (! w_data5490w[0..0])), w_anode5590w[1..1]);
	w_anode5668w[] = ( (w_anode5668w[2..2] & w_data5490w[2..2]), (w_anode5668w[1..1] & w_data5490w[1..1]), (w_anode5668w[0..0] & w_data5490w[0..0]), w_anode5590w[1..1]);
	w_data5490w[2..0] = data_wire[2..0];
END;
--VALID FILE
