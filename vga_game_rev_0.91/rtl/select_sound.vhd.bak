library IEEE;
use IEEE.STD_LOGIC_1164.all;
--use IEEE.std_logic_unsigned.all;
--use ieee.numeric_std.all;
--use ieee.std_logic_arith.all;
-- Alex Grinshpun April 2017
-- Dudy Nov 13 2017


entity game_over_object is
port 	(
		--////////////////////	Clock Input	 	////////////////////	
	   CLK  		: in std_logic;
		RESETn		: in std_logic;
		oCoord_X	: in integer;
		oCoord_Y	: in integer;
		game_is_over : in std_logic;
		KBD_in : in std_logic_vector(7 downto 0);
		make : in std_logic;
		drawing_request	: out std_logic ;
		mVGA_RGB 	: out std_logic_vector(7 downto 0) ;
		restart_game_N 	: inout std_logic
	);
end game_over_object;

architecture behav of game_over_object is 

constant object_X_size : integer := 140;
constant object_Y_size : integer := 68;

type ram_array is array(0 to object_Y_size - 1 , 0 to object_X_size - 1) of std_logic_vector(7 downto 0);  

-- one bit mask  0 - off 1 dispaly 
type object_form is array (0 to object_Y_size - 1 , 0 to object_X_size - 1) of std_logic;
constant object : object_form := (
("00011111111111111111111111110000000001111111111111111111111111000000111111111111111111101111111111111111110001111111111111111111111111111111"),
("00011111111111111111111111100000000001111111111111111111111111000000111111111111111111101111111111111111110001111111111111111111111111111111"),
("00011111111111111111111111100000000011111111111111111111111111000000111111111111111111101111111111111111110001111111111111111111111111111111"),
("11111111111111111111111111100000001111111111111111111111111111111000111111111111111111111111111111111111110001111111111111111111111111111111"),
("11111111111111111111111111100000001111111111111111111111111111111000111111111111111111111111111111111111110001111111111111111111111111111111"),
("11111111111000000000000000000000001111111111110000000111111111111000111111111111011111111111100111111111110001111111111110000000000000000000"),
("11111111111000000000000000000000001111111111110000000111111111111000111111111111011111111111100111111111110001111111111110000000000000000000"),
("11111111111000000000000000000000001111111111110000000111111111111000111111111111011111111111100111111111110001111111111110000000000000000000"),
("11111111111000000000000000000000001111111111110000000111111111111000111111111111011111111111100111111111110001111111111110000000000000000000"),
("11111111111000000000000000000000001111111111110000000111111111111000111111111111011111111111100111111111110001111111111110000000000000000000"),
("11111111111001111111111111111110001111111111110000000111111111111000111111111111011111111111100111111111110001111111111111111111111111111111"),
("11111111111001111111111111111110001111111111110000000111111111111000111111111111011111111111100111111111110001111111111111111111111111111111"),
("11111111111001111111111111111110001111111111110000000111111111111000111111111111011111111111100111111111110001111111111111111111111111111111"),
("11111111111001111111111111111110001111111111110000000111111111111000111111111111011111111111100111111111110001111111111111111111111111111111"),
("11111111111001111111111111111110001111111111110000000111111111111000111111111111011111111111100111111111110001111111111111111111111111111111"),
("11111111111000000001111111111110001111111111110000000111111111111000111111111111011111111111100111111111110001111111111110000000000000000000"),
("11111111111000000001111111111110001111111111110000000111111111111000111111111111011111111111100111111111110001111111111110000000000000000000"),
("11111111111000000001111111111110001111111111111111111111111111111000111111111111011111111111100111111111110001111111111110000000000000000000"),
("11111111111000000001111111111110001111111111111111111111111111111000111111111111011111111111100111111111110001111111111110000000000000000000"),
("11111111111000000001111111111110001111111111111111111111111111111000111111111111011111111111100111111111110001111111111110000000000000000000"),
("11111111111000000001111111111110001111111111111111111111111111111000111111111111011111111111100111111111110001111111111110000000000000000000"),
("11111111111111111111111111111110001111111111111111111111111111111000111111111111011111111111100111111111110001111111111111111111111111111111"),
("01111111111111111111111111111000001111111111111111111111111111111000111111111111011111111111100111111111110001111111111111111111111111111111"),
("00011111111111111111111111110000001111111111110000000011111111111000111111111111011111111111100111111111110001111111111111111111111111111111"),
("00011111111111111111111111110000001111111111110000000011111111111000111111111111011111111111100111111111110001111111111111111111111111111111"),
("00011111111111111111111111100000001111111111100000000011111111111000111111111111111111111111111111111111111111111111111111111111111111111111"),
("00000011111111111111111111111110000001111111111110000000011111111111100011111111111111111111111111111110001111111111111111111111111111000000"),
("00000011111111111111111111111110000001111111111110000000011111111111100011111111111111111111111111111111001111111111111111111111111111100000"),
("00000011111111111111111111111110000001111111111110000000011111111111100011111111111111111111111111111111001111111111111111111111111111000000"),
("00011111111111111111111111111111110001111111111110000000011111111111100011111111111111111111111111111111001111111111111111111111111111111000"),
("00011111111111111111111111111111111001111111111110000000011111111111100011111111111111111111111111111110001111111111111111111111111111111100"),
("00011111111111100000000111111111111001111111111110000000011111111111100011111111111100000000000000000000001111111111110000000011111111111100"),
("00011111111111100000001111111111111001111111111110000000011111111111100011111111111100000000000000000000001111111111110000000011111111111100"),
("00011111111111100000001111111111111001111111111110000000011111111111100011111111111100000000000000000000001111111111110000000011111111111100"),
("00011111111111100000001111111111111001111111111110000000011111111111100011111111111100000000000000000000001111111111110000000011111111111100"),
("00011111111111100000001111111111111001111111111110000000011111111111100011111111111100000000000000000000001111111111110000000011111111111100"),
("00011111111111100000001111111111111001111111111110000000011111111111100011111111111111111111111111111110001111111111111111111111111111111100"),
("00011111111111100000001111111111111001111111111110000000011111111111100011111111111111111111111111111110001111111111111111111111111111111100"),
("00011111111111100000001111111111111001111111111110000000011111111111100011111111111111111111111111111110001111111111111111111111111111100000"),
("00011111111111100000001111111111111001111111111110000000011111111111100011111111111111111111111111111110001111111111111111111111111111100000"),
("00011111111111100000001111111111111001111111111110000000011111111111100011111111111111111111111111111110001111111111111111111111111111111000"),
("00011111111111100000001111111111111001111111111110000000011111111111100011111111111100000000000000000000001111111111111111111111111111111100"),
("00011111111111100000001111111111111001111111111110000000011111111111100011111111111100000000000000000000001111111111110000000011111111111100"),
("00011111111111100000001111111111111001111111111111110011111111111111100011111111111100000000000000000000001111111111110000000011111111111100"),
("00011111111111100000001111111111111001111111111111110011111111111111100011111111111100000000000000000000001111111111110000000011111111111100"),
("00011111111111100000001111111111111000001111111111110011111111111100000011111111111100000000000000000000001111111111110000000011111111111100"),
("00011111111111100000000111111111111000001111111111110011111111111100000011111111111100000000000000000000001111111111110000000011111111111100"),
("00011111111111111111111111111111111000001111111111111111111111111100000011111111111111111111111111111110001111111111110000000011111111111100"),
("00001111111111111111111111111111110000000111111111111111111111111000000011111111111111111111111111111110001111111111110000000011111111111100"),
("00000011111111111111111111111110000000000000000111111111111000000000000011111111111111111111111111111110001111111111110000000011111111111100"),
("00000011111111111111111111111110000000000000000111111111111000000000000011111111111111111111111111111110001111111111110000000011111111111100"),
("00000011111111111111111111111110000000000000000111111111111000000000000011111111111111111111111111111110001111111111110000000011111111111100"),
("00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
("01111111001111100111111000011111101110001111111111011111111111110000011111110111110000001111110011111110011111101111110011111001111110111111"),
("01111111001111100111111000011111101110001111111111011111111111110000011111110111110000001111111011111110011111101111110011111001111110111111"),
("01111111001111100111111000011111101110001111111111011111111111110000011111110111110000001111110011111110011111101111110011111001111110111111"),
("01111111111111110111111110011111101111101111111111011111111111111100011111111111111100001111111111111111111111101111111111111111111111111111"),
("00011100111111110111111110011100001111101111001110011100011100011100000111001110011100001110011111100001110000000111001110001111110011101110"),
("00011100111001110111001110011111101111111111011110011111111111111100000111001110011100001111111111111111111111000111101111111111111111101110"),
("00011100111111110111111110011111101111111111011110011111111111111100000111001110011100001111111111111111111111000111101111111111111111101110"),
("00011100111111110111111000011111101111110111011110011111111111110000000111001110011100001111110011111110011111000111101111111111111110001110"),
("00011100111111110111111000011111101111111111011110011111111111110000000111001110011100001111111011111110011111100111101111111111111110001110"),
("00011100111111110111111000011111101111111111011110011111111111110000000111001110011100001111111011111110011111100111101111111111111110001110"),
("00011100111001110111000000011100001110011111011110011100011101110000000111001110011100001111110011100000000011100111101111001111111110001110"),
("00011100111001110111000000011111101110011111011110011111111111111100000111001111111100001111111111111111111111100111101111011111111111101110"),
("00011100111001110111000000011111101110011111011110011111111111111100000111001111111100001111111111111111111111100111101111011111111111101110"),
("00011100111001110111000000011111101110001111011110011111111110111100000111000111110000001110011111111111111111000111101111011111110011101110"),
("00011100111001110111000000011111101110001111011110011111111110111100000111000111110000001110011111111111111111000111101111011111110011101110")
);


signal game_over_tmp : std_logic;
signal bCoord_X : integer := 0;-- offset from start position 
signal bCoord_Y : integer := 0;

signal drawing_X : std_logic := '0';
signal drawing_Y : std_logic := '0';

signal objectEndX : integer;
signal objectEndY : integer;

signal ObjectStartX : integer := 272;
signal ObjectStartY : integer := 210;

begin

-- Calculate object end boundaries
objectEndX	<= object_X_size+ObjectStartX;
objectEndY	<= object_Y_size+ObjectStartY;

-- Signals drawing_X[Y] are active when obects coordinates are being crossed

-- test if ooCoord is in the rectangle defined by Start and End 
	drawing_X	<= '1' when  (oCoord_X  >= ObjectStartX - 70 ) and  (oCoord_X < objectEndX + 70) else '0';
    drawing_Y	<= '1' when  (oCoord_Y  >= ObjectStartY - 70 ) and  (oCoord_Y < objectEndY + 70) else '0';

-- calculate offset from start corner 
	bCoord_X 	<= (oCoord_X - ObjectStartX) when ( drawing_X = '1' and  drawing_Y = '1'  ) else 0 ; 
	bCoord_Y 	<= (oCoord_Y - ObjectStartY) when ( drawing_X = '1' and  drawing_Y = '1'  ) else 0 ; 

process (RESETn, CLK, restart_game_N)
begin
	if RESETn = '0' or restart_game_N = '0' then
	   mVGA_RGB	<=  (others => '0') ; 	
		drawing_request	<=  '0' ;
		game_over_tmp <= '0';
		restart_game_N <= '1';
	elsif rising_edge(CLK) then	
		if (game_over_tmp = '1') then
			if (KBD_in = "01011010" and make = '1') then --5A = Enter
				restart_game_N <= '0';
			end if;
			if object(bCoord_Y , bCoord_X) = '1' and drawing_X = '1' and drawing_Y = '1' then
				mVGA_RGB	<=  "00000000";
				drawing_request <= '1';
			elsif drawing_X = '1' and drawing_Y = '1' then
				mVGA_RGB	<=  "11101110";
				drawing_request <= '1';
			else
				drawing_request <= '0';
			end if;
		else
			if game_is_over = '1' then
				game_over_tmp <= '1';
			end if;
		end if;
	end if;
end process;
end behav;		
		